<?php
// Auto generated by the build:migrations command

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateStocksCompanyPropertiesTable extends Migration
{
	/**
	 * Run the migrations.
	 *
	 * @return void
	 */
	public function up()
	{
		// Make enums work pre laravel 10
		Schema::getConnection()->getDoctrineConnection()->getDatabasePlatform()->registerDoctrineTypeMapping("enum", "string");

		$indexes = $this->collectIndexedColumns();
		$columns = Schema::getColumnListing("stocks_company_properties");

		$func = Schema::hasTable("stocks_company_properties") ? "table" : "create";

		Schema::$func("stocks_company_properties", function (Blueprint $table) use ($columns, $indexes) {
			!in_array("id", $columns) && $table->integer("id")->autoIncrement();
			!in_array("company_id", $columns) && $table->integer("company_id")->nullable();
			!in_array("block_id", $columns) && $table->integer("block_id")->nullable();
			!in_array("property_id", $columns) && $table->integer("property_id")->nullable();
			!in_array("property_name", $columns) && $table->longText("property_name")->nullable();
			!in_array("property_type", $columns) && $table->tinyInteger("property_type")->nullable();
			!in_array("property_address", $columns) && $table->longText("property_address")->nullable();
			!in_array("property_cost", $columns) && $table->integer("property_cost")->nullable();
			!in_array("property_renter", $columns) && $table->longText("property_renter")->nullable();
			!in_array("property_renter_cid", $columns) && $table->integer("property_renter_cid")->nullable();
			!in_array("property_income", $columns) && $table->integer("property_income")->nullable();
			!in_array("property_last_pay", $columns) && $table->integer("property_last_pay")->nullable();
			!in_array("shared_keys", $columns) && $table->longText("shared_keys")->nullable();
			!in_array("furniture_enabled", $columns) && $table->tinyInteger("furniture_enabled")->nullable()->default("1");
			!in_array("furniture_last_pay", $columns) && $table->integer("furniture_last_pay")->nullable();
			!in_array("terminate", $columns) && $table->integer("terminate")->nullable();

			!in_array("company_id", $indexes) && $table->index("company_id");
			!in_array("property_renter_cid", $indexes) && $table->index("property_renter_cid");
			!in_array("shared_keys", $indexes) && $table->index("shared_keys");
			!in_array("property_last_pay", $indexes) && $table->index("property_last_pay");
			!in_array("block_id", $indexes) && $table->index("block_id");
			!in_array("property_id", $indexes) && $table->index("property_id");
			!in_array("property_renter", $indexes) && $table->index("property_renter");
		});
	}

	/**
	 * Reverse the migrations.
	 *
	 * @return void
	 */
	public function down()
	{
		Schema::dropIfExists("stocks_company_properties");
	}

	/**
	 * Collect all columns that are indexed in the stocks_company_properties table.
	 *
	 * @return array
	 */
	private function collectIndexedColumns(): array
	{
		if (!Schema::hasTable("stocks_company_properties")) {
			return [];
		}

		$sm  = Schema::getConnection()->getDoctrineSchemaManager();
		$tbl = $sm->introspectTable("stocks_company_properties");

		$indexes = array_reduce($tbl->getIndexes(), function ($carry, $index) {
			return array_merge($carry, $index->getColumns());
		}, []);

		return array_values(array_unique($indexes));
	}
}