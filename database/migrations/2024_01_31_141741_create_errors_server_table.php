<?php
// Auto generated by the build:migrations command

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateErrorsServerTable extends Migration
{
	/**
	 * Run the migrations.
	 *
	 * @return void
	 */
	public function up()
	{
		// Make enums work pre laravel 10
		Schema::getConnection()->getDoctrineConnection()->getDatabasePlatform()->registerDoctrineTypeMapping("enum", "string");

		$indexes = $this->collectIndexedColumns();
		$columns = Schema::getColumnListing("errors_server");

		$func = Schema::hasTable("errors_server") ? "table" : "create";

		Schema::$func("errors_server", function (Blueprint $table) use ($columns, $indexes) {
			!in_array("error_id", $columns) && $table->integer("error_id")->autoIncrement();
			!in_array("error_location", $columns) && $table->longText("error_location")->nullable();
			!in_array("error_trace", $columns) && $table->longText("error_trace")->nullable();
			!in_array("server_id", $columns) && $table->integer("server_id")->nullable();
			!in_array("timestamp", $columns) && $table->integer("timestamp")->nullable();
		});
	}

	/**
	 * Reverse the migrations.
	 *
	 * @return void
	 */
	public function down()
	{
		Schema::dropIfExists("errors_server");
	}

	/**
	 * Collect all columns that are indexed in the errors_server table.
	 *
	 * @return array
	 */
	private function collectIndexedColumns(): array
	{
		if (!Schema::hasTable("errors_server")) {
			return [];
		}

		$sm  = Schema::getConnection()->getDoctrineSchemaManager();
		$tbl = $sm->introspectTable("errors_server");

		$indexes = array_reduce($tbl->getIndexes(), function ($carry, $index) {
			return array_merge($carry, $index->getColumns());
		}, []);

		return array_values(array_unique($indexes));
	}
}