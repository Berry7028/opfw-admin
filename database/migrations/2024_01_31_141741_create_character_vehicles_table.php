<?php
// Auto generated by the build:migrations command

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateCharacterVehiclesTable extends Migration
{
	/**
	 * Run the migrations.
	 *
	 * @return void
	 */
	public function up()
	{
		// Make enums work pre laravel 10
		Schema::getConnection()->getDoctrineConnection()->getDatabasePlatform()->registerDoctrineTypeMapping("enum", "string");

		$indexes = $this->collectIndexedColumns();
		$columns = Schema::getColumnListing("character_vehicles");

		$func = Schema::hasTable("character_vehicles") ? "table" : "create";

		Schema::$func("character_vehicles", function (Blueprint $table) use ($columns, $indexes) {
			!in_array("vehicle_id", $columns) && $table->integer("vehicle_id")->autoIncrement();
			!in_array("owner_cid", $columns) && $table->integer("owner_cid")->nullable();
			!in_array("model_name", $columns) && $table->longText("model_name")->nullable();
			!in_array("plate", $columns) && $table->char("plate", 8)->nullable();
			!in_array("mileage", $columns) && $table->double("mileage")->nullable()->default("0");
			!in_array("modifications", $columns) && $table->longText("modifications")->nullable();
			!in_array("data", $columns) && $table->longText("data")->nullable();
			!in_array("garage_identifier", $columns) && $table->longText("garage_identifier")->nullable();
			!in_array("garage_state", $columns) && $table->integer("garage_state")->nullable()->default("0");
			!in_array("garage_impound", $columns) && $table->integer("garage_impound")->nullable()->default("0");
			!in_array("deprecated_damage", $columns) && $table->longText("deprecated_damage")->nullable();
			!in_array("deprecated_modifications", $columns) && $table->longText("deprecated_modifications")->nullable();
			!in_array("deprecated_fuel", $columns) && $table->double("deprecated_fuel")->nullable()->default("100");
			!in_array("deprecated_supporter", $columns) && $table->tinyInteger("deprecated_supporter")->nullable()->default("0");
			!in_array("vehicle_deleted", $columns) && $table->tinyInteger("vehicle_deleted")->nullable()->default("0");
			!in_array("last_garage_identifier", $columns) && $table->longText("last_garage_identifier")->nullable();
			!in_array("garage_state_updated", $columns) && $table->integer("garage_state_updated")->nullable()->default("0");
			!in_array("police_impound_expire", $columns) && $table->integer("police_impound_expire")->nullable();
			!in_array("emergency_type", $columns) && $table->tinyInteger("emergency_type")->nullable()->default("0");
			!in_array("was_boosted", $columns) && $table->tinyInteger("was_boosted")->nullable()->default("0");
			!in_array("oil_mileage_after", $columns) && $table->integer("oil_mileage_after")->nullable();
			!in_array("created_at", $columns) && $table->integer("created_at")->nullable();

			!in_array("owner_cid", $indexes) && $table->index("owner_cid");
			!in_array("plate", $indexes) && $table->index("plate");
			!in_array("vehicle_id", $indexes) && $table->index("vehicle_id");
			!in_array("vehicle_deleted", $indexes) && $table->index("vehicle_deleted");
			!in_array("garage_state_updated", $indexes) && $table->index("garage_state_updated");
			!in_array("police_impound_expire", $indexes) && $table->index("police_impound_expire");
			!in_array("emergency_type", $indexes) && $table->index("emergency_type");
			!in_array("garage_identifier", $indexes) && $table->index("garage_identifier");
			!in_array("garage_state", $indexes) && $table->index("garage_state");
			!in_array("garage_impound", $indexes) && $table->index("garage_impound");
			!in_array("was_boosted", $indexes) && $table->index("was_boosted");
		});
	}

	/**
	 * Reverse the migrations.
	 *
	 * @return void
	 */
	public function down()
	{
		Schema::dropIfExists("character_vehicles");
	}

	/**
	 * Collect all columns that are indexed in the character_vehicles table.
	 *
	 * @return array
	 */
	private function collectIndexedColumns(): array
	{
		if (!Schema::hasTable("character_vehicles")) {
			return [];
		}

		$sm  = Schema::getConnection()->getDoctrineSchemaManager();
		$tbl = $sm->introspectTable("character_vehicles");

		$indexes = array_reduce($tbl->getIndexes(), function ($carry, $index) {
			return array_merge($carry, $index->getColumns());
		}, []);

		return array_values(array_unique($indexes));
	}
}