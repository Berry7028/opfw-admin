{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","legacy-rp-admin/tests/helpers/ember-power-select.js","legacy-rp-admin/tests/helpers/ember-simple-auth.js","legacy-rp-admin/tests/integration/components/search-players-test.js","legacy-rp-admin/tests/lint/app.lint-test.js","legacy-rp-admin/tests/lint/templates.template.lint-test.js","legacy-rp-admin/tests/lint/tests.lint-test.js","legacy-rp-admin/tests/test-helper.js","legacy-rp-admin/tests/unit/adapters/application-test.js","legacy-rp-admin/tests/unit/controllers/application-test.js","legacy-rp-admin/tests/unit/controllers/index-test.js","legacy-rp-admin/tests/unit/controllers/players/application-test.js","legacy-rp-admin/tests/unit/controllers/players/index-test.js","legacy-rp-admin/tests/unit/mixins/application-route-mixin-test.js","legacy-rp-admin/tests/unit/models/player-test.js","legacy-rp-admin/tests/unit/models/user-test.js","legacy-rp-admin/tests/unit/routes/index-test.js","legacy-rp-admin/tests/unit/routes/login-test.js","legacy-rp-admin/tests/unit/routes/login/callback-test.js","legacy-rp-admin/tests/unit/routes/players/application-test.js","legacy-rp-admin/tests/unit/routes/players/index-test.js","legacy-rp-admin/tests/unit/routes/players/search-test.js","legacy-rp-admin/tests/unit/routes/players/view-test.js","legacy-rp-admin/tests/unit/routes/players/view/logs-test.js","legacy-rp-admin/tests/unit/routes/players/view/warnings-test.js","legacy-rp-admin/tests/unit/routes/test-test.js","legacy-rp-admin/tests/unit/serializers/application-test.js","legacy-rp-admin/tests/unit/services/current-user-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"legacy-rp-admin/tests/helpers/ember-power-select\", [\"exports\", \"ember-power-select/test-support/helpers\"], function (_exports, _helpers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = deprecatedRegisterHelpers;\n  _exports.selectChoose = _exports.touchTrigger = _exports.nativeTouch = _exports.clickTrigger = _exports.typeInSearch = _exports.triggerKeydown = _exports.nativeMouseUp = _exports.nativeMouseDown = _exports.findContains = void 0;\n\n  function deprecateHelper(fn, name) {\n    return function (...args) {\n      (true && !(false) && Ember.deprecate(\"DEPRECATED `import { \".concat(name, \" } from '../../tests/helpers/ember-power-select';` is deprecated. Please, replace it with `import { \").concat(name, \" } from 'ember-power-select/test-support/helpers';`\"), false, {\n        until: '1.11.0',\n        id: \"ember-power-select-test-support-\".concat(name)\n      }));\n      return fn(...args);\n    };\n  }\n\n  let findContains = deprecateHelper(_helpers.findContains, 'findContains');\n  _exports.findContains = findContains;\n  let nativeMouseDown = deprecateHelper(_helpers.nativeMouseDown, 'nativeMouseDown');\n  _exports.nativeMouseDown = nativeMouseDown;\n  let nativeMouseUp = deprecateHelper(_helpers.nativeMouseUp, 'nativeMouseUp');\n  _exports.nativeMouseUp = nativeMouseUp;\n  let triggerKeydown = deprecateHelper(_helpers.triggerKeydown, 'triggerKeydown');\n  _exports.triggerKeydown = triggerKeydown;\n  let typeInSearch = deprecateHelper(_helpers.typeInSearch, 'typeInSearch');\n  _exports.typeInSearch = typeInSearch;\n  let clickTrigger = deprecateHelper(_helpers.clickTrigger, 'clickTrigger');\n  _exports.clickTrigger = clickTrigger;\n  let nativeTouch = deprecateHelper(_helpers.nativeTouch, 'nativeTouch');\n  _exports.nativeTouch = nativeTouch;\n  let touchTrigger = deprecateHelper(_helpers.touchTrigger, 'touchTrigger');\n  _exports.touchTrigger = touchTrigger;\n  let selectChoose = deprecateHelper(_helpers.selectChoose, 'selectChoose');\n  _exports.selectChoose = selectChoose;\n\n  function deprecatedRegisterHelpers() {\n    (true && !(false) && Ember.deprecate(\"DEPRECATED `import registerPowerSelectHelpers from '../../tests/helpers/ember-power-select';` is deprecated. Please, replace it with `import registerPowerSelectHelpers from 'ember-power-select/test-support/helpers';`\", false, {\n      until: '1.11.0',\n      id: 'ember-power-select-test-support-register-helpers'\n    }));\n    return (0, _helpers.default)();\n  }\n});","define(\"legacy-rp-admin/tests/helpers/ember-simple-auth\", [\"exports\", \"ember-simple-auth/authenticators/test\"], function (_exports, _test) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.authenticateSession = authenticateSession;\n  _exports.currentSession = currentSession;\n  _exports.invalidateSession = invalidateSession;\n  const TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    const authenticator = container.lookup(TEST_CONTAINER_KEY);\n\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _test.default);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    const {\n      __container__: container\n    } = app;\n    const session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return app.testHelpers.wait();\n  }\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    const session = app.__container__.lookup('service:session');\n\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n\n    return app.testHelpers.wait();\n  }\n});","define(\"legacy-rp-admin/tests/integration/components/search-players-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | search-players', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"FbCKTRZG\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"search-players\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"U63QtZ/n\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"search-players\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"legacy-rp-admin/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('authenticators/oauth2.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'authenticators/oauth2.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/players.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/players.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/players/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/players/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/player.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/player.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/user.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/user.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/login/callback.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login/callback.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/login/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/players.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/players.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/players/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/players/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/players/search.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/players/search.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/players/view.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/players/view.js should pass ESLint\\n\\n7:9 - Unexpected console statement. (no-console)');\n  });\n  QUnit.test('routes/players/view/logs.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/players/view/logs.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/players/view/warnings.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/players/view/warnings.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('serializers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('services/current-user.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/current-user.js should pass ESLint\\n\\n');\n  });\n});","define(\"legacy-rp-admin/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('legacy-rp-admin/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/login/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/login/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/players.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/players.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/players/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/players/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/players/search.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/players/search.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/players/view.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'legacy-rp-admin/templates/players/view.hbs should pass TemplateLint.\\n\\nlegacy-rp-admin/templates/players/view.hbs\\n  10:21  error  links with target=\"_blank\" must have rel=\"noopener\"  link-rel-noopener\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/players/view/logs.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/players/view/logs.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/players/view/warnings.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/players/view/warnings.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('legacy-rp-admin/templates/test.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'legacy-rp-admin/templates/test.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"legacy-rp-admin/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('integration/components/search-players-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/search-players-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/adapters/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/controllers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/controllers/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/controllers/players/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/players/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/controllers/players/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/players/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/mixins/application-route-mixin-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/mixins/application-route-mixin-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/player-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/player-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/user-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/user-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/login/callback-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login/callback-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/players/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/players/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/players/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/players/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/players/search-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/players/search-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/players/view-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/players/view-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/players/view/logs-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/players/view/logs-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/players/view/warnings-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/players/view/warnings-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/test-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/test-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/serializers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/services/current-user-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/current-user-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"legacy-rp-admin/tests/test-helper\", [\"legacy-rp-admin/app\", \"legacy-rp-admin/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"legacy-rp-admin/tests/unit/adapters/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Adapter | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let adapter = this.owner.lookup('adapter:application');\n      assert.ok(adapter);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/controllers/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:application');\n      assert.ok(controller);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/controllers/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:index');\n      assert.ok(controller);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/controllers/players/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | players/application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:players/application');\n      assert.ok(controller);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/controllers/players/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | players/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:players/index');\n      assert.ok(controller);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/mixins/application-route-mixin-test\", [\"legacy-rp-admin/mixins/application-route-mixin\", \"qunit\"], function (_applicationRouteMixin, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Mixin | ApplicationRouteMixin', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let ApplicationRouteMixinObject = Ember.Object.extend(_applicationRouteMixin.default);\n      let subject = ApplicationRouteMixinObject.create();\n      assert.ok(subject);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/models/player-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | player', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('player', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/models/user-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | user', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('user', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/login-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | login', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:login');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/login/callback-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | login/callback', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:login/callback');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/players/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | players/application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:players/application');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/players/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | players/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:players/index');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/players/search-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | players/search', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:players/search');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/players/view-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | players/view', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:players/view');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/players/view/logs-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | players/view/logs', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:players/view/logs');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/players/view/warnings-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | players/view/warnings', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:players/view/warnings');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/routes/test-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | test', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:test');\n      assert.ok(route);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/serializers/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Serializer | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let serializer = store.serializerFor('application');\n      assert.ok(serializer);\n    });\n    (0, _qunit.test)('it serializes records', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let record = store.createRecord('application', {});\n      let serializedRecord = record.serialize();\n      assert.ok(serializedRecord);\n    });\n  });\n});","define(\"legacy-rp-admin/tests/unit/services/current-user-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | current-user', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:current-user');\n      assert.ok(service);\n    });\n  });\n});","define('legacy-rp-admin/config/environment', [], function() {\n  var prefix = 'legacy-rp-admin';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('legacy-rp-admin/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtnjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}